//Install the NeoPixel library
//Board is an Arduino Nano with an ATmega328P (old bootloader)

#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
#include <avr/power.h>
#endif

#define LED 13              // LED PIN on nano
#define DATA_PIN 6          // Drives data to the stripe
#define PUSH_BTN 2          // push button pin - active low
#define LEDs 25             // number leds 
#define BTN_ACTIVE LOW
#define BTN_INACTIVE HIGH
#define DEBUG false

// press duration
const int shortPress = 400;
const int oneSecond = 800;
const int twoSeconds = 1600;
const int threeSeconds = 3000;
const int fiveSeconds = 5000;

// inits
int owl_mode = 4;
int name_mode = 5;
int led_start_state = BTN_ACTIVE;       // the current state of the output pin
int brightness = 50;

unsigned long btn_start_time = 0;
unsigned long btn_timer;
unsigned long idle_timer;
unsigned long push_btn_duration = 0;    // tracks the current time the button has been pushed

int button_state;    // where value of reading the pin is stored

// setup NeoPixel 'strip' command
Adafruit_NeoPixel strip = Adafruit_NeoPixel(LEDs, DATA_PIN, NEO_GRB + NEO_KHZ800);

void setup()
{
  if (DEBUG) Serial.begin(9600);
  if (DEBUG) Serial.println("---- starting script ----");

  pinMode(PUSH_BTN, INPUT_PULLUP);
  pinMode(LED, OUTPUT);

  // set initial LED state (on nano)
  digitalWrite(LED, led_start_state);

  // NeoPixel (strip) setup commands
  strip.begin();
  strip.setBrightness(brightness);   
  strip.show(); 
}

void loop()
{
  displayOwl(owl_mode);
  displayName(name_mode);

  button_state = digitalRead(PUSH_BTN);

  if (button_state != BTN_INACTIVE) {
    btn_start_time = millis();                              //grab the current count on the clock
    while (button_state == BTN_ACTIVE) {                    //Sit here until the button is released
      button_state = digitalRead(PUSH_BTN);
    }

    push_btn_duration = (millis() - btn_start_time);    //Calculate how long button was pressed
    if (push_btn_duration > twoSeconds) {               //We're looking for a button press over two seconds to go into modes
      confirmButtonPress();
      buttonOptionsOwl();
    } else if (push_btn_duration < twoSeconds) { 
      brightness = (brightness + 20) % 180;
      strip.setBrightness(brightness);   
      strip.show();
    }
    
    push_btn_duration = 0;
    delay(10);
  }

}


void buttonOptionsOwl() 
{
  btn_timer = millis();
  idle_timer = millis();
  while ((millis() - idle_timer) < 10000) {
    button_state = digitalRead(PUSH_BTN);
    if (button_state != BTN_INACTIVE) {
      btn_timer = millis();
      btn_start_time = millis();                              //grab the current count on the clock
      while (button_state == BTN_ACTIVE) {                    //Sit here until the button is released
        button_state = digitalRead(PUSH_BTN);
      }
      push_btn_duration = (millis() - btn_start_time);    //Calculate how long button was pressed
      if (push_btn_duration <= shortPress) {
        idle_timer = millis();                                     //resetting idle timer since a button was pressed
        if (owl_mode < 5) {                                      //Advance Owl Mode selection
          owl_mode++;
        } else {
          owl_mode = 1;
        }
        displayOwl(owl_mode);
        delay(50);
      } else if ((push_btn_duration > twoSeconds) && (push_btn_duration <= fiveSeconds)) {
        confirmButtonPress();
        buttonOptionsName();
        break;
      } else {
        return;
      }
      push_btn_duration = 0;
    }
  }
}

void buttonOptionsName() 
{
  btn_timer = millis();
  idle_timer = millis();
  
  if (DEBUG) {
    Serial.print("btn_timer: ");
    Serial.println(btn_timer);
    Serial.print("idle_timer: ");
    Serial.println(idle_timer);
  }
  
  while ((millis() - idle_timer) < 10000) {
    button_state = digitalRead(PUSH_BTN);
    
    if (DEBUG) {
      Serial.print("button_state: ");
      Serial.println(button_state);
    }
  
    if (button_state != BTN_INACTIVE) {
      btn_timer = millis();
      btn_start_time = millis();                              //grab the current count on the clock
      while (button_state == BTN_ACTIVE) {                    //Sit here until the button is released
        button_state = digitalRead(PUSH_BTN);
      }
      push_btn_duration = (millis() - btn_start_time);    //Calculate how long button was pressed
      if (push_btn_duration <= shortPress) {
        idle_timer = millis();                                     //resetting idle timer since a button was pressed
        if (name_mode < 5) {                                        //Advance Owl Mode selection
          name_mode++;
        } else {
          name_mode = 1;
        }
        displayName(name_mode);
        delay(10);
      } else if ((push_btn_duration > twoSeconds) && (push_btn_duration <= fiveSeconds)) {
        break;
      } else {
        return;
      }
      push_btn_duration = 0;
    }
  }
}

void displayOwl(int mode) 
{

//  if (DEBUG) {
//    Serial.print("displayOwl(");
//    Serial.print(mode);
//    Serial.println(")");
//  }
  
  switch (mode) {
    case 1:
      for (int i = 0; i < 20; i++) {
        strip.setPixelColor(i, strip.Color(100, 0, 0));
        strip.show();
      }
      break;
    case 2:
      for (int i = 0; i < 20; i++) {
        strip.setPixelColor(i, strip.Color(0, 100, 0));
        strip.show();
      }
      break;
    case 3:
      for (int i = 0; i < 20; i++) {
        strip.setPixelColor(i, strip.Color(0, 0, 100));
        strip.show();
      }
      break;
    case 4:
      for (int i = 0; i < 20; i++) {
        strip.setPixelColor(i, strip.Color(0, 50, 15));
        strip.show();
      }
      break;
    case 5:
      for (int i = 0; i < 20; i++) {
        strip.setPixelColor(i, strip.Color(100, 0, 50));
        strip.show();
      }
      break;
  }
}

void displayName(int mode) 
{

//  if (DEBUG) {
//    Serial.print("displayName(");
//    Serial.print(mode);
//    Serial.println(")");
//  }
  
  switch (mode) {
    case 1:
      for (int i = 20; i < 25; i++) {
        strip.setPixelColor(i, strip.Color(150, 0, 0));
        strip.show();
      }
      break;
    case 2:
      for (int i = 20; i < 25; i++) {
        strip.setPixelColor(i, strip.Color(0, 150, 0));
        strip.show();
      }
      break;
    case 3:
      for (int i = 20; i < 25; i++) {
        strip.setPixelColor(i, strip.Color(0, 0, 150));
        strip.show();
      }
      break;
    case 4:
      for (int i = 20; i < 25; i++) {
        strip.setPixelColor(i, strip.Color(0, 50, 15));
        strip.show();
      }
      break;
    case 5:
      for (int i = 20; i < 25; i++) {
        strip.setPixelColor(i, strip.Color(150, 0, 100));
        strip.show();
      }
      break;
  }
}

void confirmButtonPress() 
{
 
  if (DEBUG) Serial.println("confirmButtonPress()");

  // blink the name so I know it worked
  for (int i = 0; i <= 3; i++) {
    displayName(1);
    delay(100);
    displayName(2);
    delay(100);
  }

  displayName(name_mode);
}
